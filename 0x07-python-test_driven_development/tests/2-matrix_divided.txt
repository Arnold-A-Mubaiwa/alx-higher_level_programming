============================
        Divide a matrix
============================

In this program wee have one function called
``matrix_divided()``

The function is to take two arguments: an list (of integers)
and an integer ``matrix_divided([1,2,3],6)``

The matrix must be a list of list
==================================
list of integers
::
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix_divided([[ 2, 6, 8], [4, 8, 10]], 2)
    [[1, 3, 4], [2, 4, 5]]

list of floats
::
    >>> matrix_divided([[ 2.0, 6.0, 8.0], [4.0, 8.0, 10.0]], 2)
    [[1.0, 3.0, 4.0], [2.0, 4.0, 5.0]]

Tracebacks
===================================
matrix must contain 2-d list
::
    >>> matrix_divided(2, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

div must not be divisable by zero
::
    >>> matrix_divided([[1, 2, 3], [2, 3, 4]], 0)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

div must be a number integer or float
::
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 's')
    Traceback (most recent call last):
        ...
    TypeError: div must be a number
